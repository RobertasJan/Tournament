@page "/tournaments"
@using Tournament.Shared.Players
@using Tournament.Shared.Tournaments;

<PageTitle>@Loc["Label_Tournaments"]</PageTitle>

<MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
    <MudTabPanel Text="@Loc["Header_UpcomingTournaments"]">
        @foreach (var tourney in Tournaments)
        {
            var href = $"tournament/{tourney.Id}";
            <MudLink Href="@href">
                <MudText Typo="Typo.h4" GutterBottom="true">@tourney.Name</MudText>
                <MudText Typo="Typo.caption" GutterBottom="true">@tourney.Description</MudText>
            </MudLink>
        }
    </MudTabPanel>
    <MudTabPanel Text="@Loc["Header_PreviousTournaments"]">
        @foreach (var tourney in PreviousTournaments)
        {
            var href = $"tournament/{tourney.Id}";
            <MudLink Href="@href">
                <MudText Typo="Typo.h4" GutterBottom="true">@tourney.Name</MudText>
                <MudText Typo="Typo.caption" GutterBottom="true">@tourney.Description</MudText>
            </MudLink>
        }
    </MudTabPanel>
</MudTabs>

@code {
    [Inject] TournamentService TournamentService { get; set; }

    ICollection<TournamentModel>? Tournaments { get; set; } = new List<TournamentModel>();
    ICollection<TournamentModel>? PreviousTournaments { get; set; } = new List<TournamentModel>();

    protected override async Task OnInitializedAsync()
    {
        Tournaments = (await TournamentService.GetTournaments(false)).Data;
        PreviousTournaments = (await TournamentService.GetTournaments(true)).Data;
    }
    [Inject] PlayerService PlayerService { get; set; }
}