@page "/match/{Id:guid}"

@using Tournament.Client.Components.Match
@using Tournament.Domain.Games

<PageTitle>Match</PageTitle>
<MudText Typo="Typo.h4" GutterBottom="true">Match</MudText>
<MudOverlay Visible="match is null" DarkBackground="true" AutoClose="true"></MudOverlay>
<MudPaper Class="pa-5" Style="background-color: var(--color-court); min-height: 40vh;">
    <MudGrid>
        @if (match is not null)
        {
            <MudItem xs="12">
                <MudText Class="d-flex align-center justify-center mud-width-full py-2 white-text">@match.CurrentGame.Team1Score - @match.CurrentGame.Team2Score</MudText>
            </MudItem>
            <MudItem Class="my-auto" xs="2">
                @if (!match.EndGame)
                {
                    <MudElement Class="d-flex align-center justify-center">
                        <MudButton Class="mud-width-full py-2" Color="Color.Primary" Variant="Variant.Filled" @onclick="match.Team1LeftSide ? match.AddTeam1Score : match.AddTeam2Score">Click me</MudButton>
                    </MudElement>
                }
            </MudItem>
            <MudItem xs="4">
                <MatchPlayerTag ShuttleVisible="match.ServeLocation == ServeLocation.NW" ShuttleAfter="false">@match.Player2</MatchPlayerTag>
                <MatchPlayerTag ShuttleVisible="match.ServeLocation == ServeLocation.SW" ShuttleAfter="false">@match.Player1</MatchPlayerTag>
                @if (match.CurrentGame.Team1Score == 0 && match.CurrentGame.Team2Score == 0)
                {
                    <MudButton Class="py-2" Color="Color.Secondary" Variant="Variant.Filled" @onclick="match.SwitchLeftsidePlayers">Switch</MudButton>
                }
            </MudItem>
            <MudItem xs="4">
                <MatchPlayerTag ShuttleVisible="match.ServeLocation == ServeLocation.NE" ShuttleAfter="true">@match.Player3</MatchPlayerTag>
                <MatchPlayerTag ShuttleVisible="match.ServeLocation == ServeLocation.SE" ShuttleAfter="true">@match.Player4</MatchPlayerTag>
                @if (match.CurrentGame.Team1Score == 0 && match.CurrentGame.Team2Score == 0)
                {
                    <MudButton Class="py-2" Color="Color.Secondary" Variant="Variant.Filled" @onclick="match.SwitchRightsidePlayers">Switch</MudButton>
                }
            </MudItem>
            <MudItem Class="my-auto" xs="2">
                @if (!match.EndGame)
                {
                    <MudElement Class="d-flex align-center justify-center">
                        <MudButton Class="mud-width-full py-2" Color="Color.Primary" Variant="Variant.Filled" @onclick="match.Team1LeftSide ? match.AddTeam2Score : match.AddTeam1Score">Click me</MudButton>
                    </MudElement>
                }
            </MudItem>
            <MudItem xs="12">
                <MudElement Class="d-flex align-left justify-center">
                    @if (match.CurrentGame.Team1Score != 0 || match.CurrentGame.Team2Score != 0)
                    {
                        @if (match.EndMatch)
                        {
                            <MudButton Class="py-2" Color="Color.Warning" Variant="Variant.Filled" @onclick="match.ReturnPoint">End match</MudButton>
                        }
                        else if (match.EndGame)
                        {
                            <MudButton Class="py-2" Color="Color.Warning" Variant="Variant.Filled" @onclick="match.ReturnPoint">End game</MudButton>
                        }
                        @if (!match.EndMatch)
                        {
                            <MudButton Class="py-2" Color="Color.Warning" Variant="Variant.Filled" @onclick="match.ReturnPoint">Return</MudButton>
                        }
                    }
                    else
                    {
                        <MudButton Class="py-2" Color="Color.Secondary" Variant="Variant.Filled" @onclick="match.ChangeServeSide">Change Serve Side</MudButton>
                        <MudButton Class="py-2" Color="Color.Secondary" Variant="Variant.Filled" @onclick="match.SwitchTeams">Switch teams</MudButton>
                    }
                </MudElement>
            </MudItem>
        }
    </MudGrid>
</MudPaper>
@code {
    [Parameter]
    public Guid Id { get; set; }
    [Inject] GameService GameService { get; set; }

    private MatchViewModel match;

    protected override async Task OnInitializedAsync()
    {
        match = new MatchViewModel(GameService, await GameService.GetMatchById(Id), await GameService.GetMatchGames(Id));
    }
}
