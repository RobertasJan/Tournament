@page "/tournament/{Id:guid}"
@using Tournament.Shared.Players
@using Tournament.Shared.Tournaments

<PageTitle>Tournament</PageTitle>
@if (model != null)
{
    <MudGrid>
        <MudItem xs="12" md="6">
            <MudPaper Class="justify-center">
                <TournamentTable Groups="model.Data.Groups" RegisteredPlayers="model.Players" TournamentId="Id"></TournamentTable>
            </MudPaper>
        </MudItem>
        <MudItem xs="12">
            <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
                <MudTabPanel Text="Description">
                    <MudText Typo="Typo.h4" GutterBottom="true">@model.Data.Name</MudText>
                    <MudText Typo="Typo.caption" GutterBottom="true">@model.Data.Description</MudText>
                    <MudText Typo="Typo.body2" GutterBottom="true">@model.Data.LongDescription</MudText>
                </MudTabPanel>
                <MudTabPanel Text="Players">
                    <MudDataGrid T="RegisteredPlayersModel" Items="model.Players" Filterable="true">
                        <Columns>
                            <SelectColumn T="RegisteredPlayersModel" />
                            <Column T="RegisteredPlayersModel" Field="Player1Name" Title="Name"/>
                        </Columns>
                    </MudDataGrid>
                    <MudText>Content Two</MudText>
                </MudTabPanel>
            </MudTabs>

        </MudItem>
        <MudItem xs="12">
            @{
                var href = $"tournament/{Id}/register";
            }
            <MudLink Href="@href">
                <MudButton Variant="Variant.Filled"
                       Color="Color.Primary">
                    REGISTER
                </MudButton>
            </MudLink>
        </MudItem>
    </MudGrid>
}
@code {
    [Parameter]
    public Guid Id { get; set; }


    [Inject] TournamentService TournamentService { get; set; }

    TournamentViewModel model;

    protected override async Task OnInitializedAsync()
    {
    
        model = new TournamentViewModel(TournamentService, await TournamentService.GetTournamentById(Id));
        model.Players = await TournamentService.GetRegisteredPlayers(Id);
    }
}