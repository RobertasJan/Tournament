@page "/"
@using Tournament.Client.Components;
@using Tournament.Shared.Tournaments

<PageTitle>@Loc["Label_Badminton"]</PageTitle>

<MudText Typo="Typo.h4">@Loc["Header_UpcomingTournaments"]</MudText>
<MudDivider />
@if (Tournaments != null)
{
    @foreach (var tourney in Tournaments)
    {
        var href = $"tournament/{tourney.Id}";
        <MudLink Href="@href">
            <MudText Typo="Typo.h4" GutterBottom="true">@tourney.Name</MudText>
            <MudText Typo="Typo.caption" GutterBottom="true">@tourney.Description</MudText>
        </MudLink>
    }
}

@code {
    [Inject] TournamentService TournamentService { get; set; }

    ICollection<TournamentModel>? Tournaments { get; set; }

    [CascadingParameter(Name = "ErrorComponent")]
    protected IErrorComponent ErrorComponent { get; set; }



    protected override async Task OnParametersSetAsync()
    {
        var response = (await TournamentService.GetTournaments(false));
        ErrorComponent.ShowError(response.Error?.ErrorMessage);
        Tournaments = response.Data;
    }

}